<!-- /apex/RollbarTestPage -->
<apex:page controller="RollbarTestPageController" title="Rollbar Apex Reporting Examples">
    <h1>Rollbar Test Page</h1>
    <apex:form>
        <apex:pageBlock title="Examples">
            <apex:pageBlockSection title="Report an arbitrary string message">
                <code>
                    Rollbar.log('info', 'Hello world from my Salesforce org');
                </code>
                <p>Report a string "Hello world from my Salesforce org" to Rollbar.</p>
                <apex:commandButton action="{!testLogMessage}" value="Run" />
            </apex:pageBlockSection>
            <apex:pageBlockSection title="Report an exception with a stack trace">
                <code>
                        try {<br />
                            <mark>this.buildData();</mark><br />
                        } catch(Exception ex) {<br />
                            Map&#x3C;String, Object&#x3E; custom = new Map&#x3C;String, Object&#x3E;();<br />
                            custom.put(&#x27;project&#x27;, &#x27;foo&#x27;);<br />
                            custom.put(&#x27;project_view&#x27;, &#x27;bar&#x27;);<br />
                            <mark>
                            Rollbar.log(<br />
                                ex,<br />
                                custom<br />
                            );<br />
                            </mark>
                        }<br />
                        <br /><br />
                        public Map&#x3C;String, String&#x3E; buildData()<br />
                        {<br />
                            Map&#x3C;String, String&#x3E; structure = new Map&#x3C;String, String&#x3E;();<br />
                            structure.put(&#x27;language&#x27;, &#x27;Apex&#x27;);<br />
                            structure.put(&#x27;version&#x27;, this.buildVersionString());<br />
                            return structure;<br />
                        }<br />
                        <br /><br />
                        public String buildVersionString() {<br />
                            String version = null;<br />
                            if (<mark>version.length()</mark> == 0) {<br />
                                version = this.getMajor() +<br />
                                    &#x27;.&#x27; +<br />
                                    this.getMinor() +<br />
                                    &#x27;.&#x27; +<br />
                                    this.getPatch();<br />
                            }<br />
                            return version;<br />
                        }
                </code>
                <p>Report an exception with a stack trace to Rollbar.</p>
            </apex:pageBlockSection>
            <apex:pageBlockSection>
                <apex:commandButton action="{!testLogException}" value="Run with Rollbar" />
                <apex:commandButton action="{!testLogExceptionNoRollbar}" value="Run without Rollbar" />
            </apex:pageBlockSection>
            <apex:pageBlockSection title="Report an unhandled Apex exception">
                <code>
                    String myString = null;<br />
                    <mark>myString.length();</mark>
                </code>
                <p>This example causes an unhandled null pointer exception in Apex code.</p>
                <p>The expected behavior is to receive an occurrence in Rollbar including information about the exception.</p>
                
            </apex:pageBlockSection>
            <apex:pageBlockSection>
                <apex:commandButton action="{!testUnhadledException}" value="Run" />
                <apex:commandButton action="{!sendApexExceptionNotification}" value="Send Apex Notification Manually" />
                <apex:actionFunction name="sendApexExceptionNotification" action="{!sendApexExceptionNotification}" rerender="sendApexExceptionNotification"></apex:actionFunction>
            </apex:pageBlockSection>
            <apex:pageBlockSection title="Emulate a buggy Salesforce app">
                <p>The following example emulates behavior of users triggering one of multiple actions available in an example Salesforce app.</p>
                <p>All of these actions include buggy code causing errors in the app.</p>
                <p>Errors caused by emulated users should get reported to the associated Rollbar account.</p>
            <apex:pageBlockSection>
            </apex:pageBlockSection>
                <script>
                    function toggleAction(element, action, interval) {
                        if (element.actionOn == undefined) {
                            element.actionOn =  true;
                            element.originalText = element.innerHTML;
                        }

                        element.actionOn = !element.actionOn;

                        var continousAction = function(action, interval) {
                            setTimeout(function() {

                                if (!element.actionOn) {
                                    return;
                                }

                                action();
                                continousAction(action, interval);

                            }, interval);
                        };

                        if (element.actionOn) {
                            element.innerHTML = 'Stop';
                            continousAction(action, interval);
                        } else {
                            element.innerHTML = element.originalText;
                        }

                        element.onclick = function() { toggleAction(this, action, interval); return false; };
                    }
                </script>
                
                <apex:outputPanel id="emulateUsersInBackground">
                    {!emulateUsersMsg}
                </apex:outputPanel>

                <button class="emulateUsersInBackground">Start emulating users</button>
                <apex:actionFunction name="emulateUsersInBackground" action="{!emulateUsersInBackground}" rerender="emulateUsersInBackground"></apex:actionFunction>

                <script>
                    toggleAction(
                        document.getElementsByClassName('emulateUsersInBackground')[0],
                        function() {
                            console.log(emulateUsersInBackground());
                        },
                        500
                    );
                </script>
            </apex:pageBlockSection>
            <apex:pageBlockSection>
                <div id="sendApexExceptionNotificationInBackground"></div>
                <apex:actionFunction name="sendApexExceptionNotificationInBackground" action="{!sendApexExceptionNotificationInBackground}" rerender="sendApexExceptionNotificationInBackground">
                </apex:actionFunction>
                <button class="toggleSendingApexExceptionNotifications">Start sending Apex Exception Notifications</button>

                <script>
                    toggleAction(
                        document.getElementsByClassName('toggleSendingApexExceptionNotifications')[0],
                        function() {
                            sendApexExceptionNotificationInBackground();
                        },
                        3000
                    );
                </script>
            </apex:pageBlockSection>
        </apex:pageBlock>
    </apex:form>
</apex:page>
